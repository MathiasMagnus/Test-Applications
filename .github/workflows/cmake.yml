name: Build - Ubuntu

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow#configuring-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build
    
    - name: Read Build Environment
      shell: bash
      run: realpath $GITHUB_WORKSPACE;
        ls -al $GITHUB_WORKSPACE;
        realpath ${{runner.workspace}}/build;
        ls -al ${{runner.workspace}}/build;
        which cmake;
        cmake --version;
        nproc;
        env
      
    - name: Read folder2
      shell: bash
      run: ls $GITHUB_WORKSPACE/CPP-Filesystem

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      run: cmake
        -D CMAKE_CXX_COMPILER=g++-9
        -D CMAKE_BUILD_TYPE=$BUILD_TYPE
        -S $GITHUB_WORKSPACE/CPP-Filesystem
        -B ${{runner.workspace}}/build

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE
